# Generated by Django 4.0.3 on 2022-04-08 06:23

import cloudinary.models
import colorful.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChildrenProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Изображение')),
                ('amount', models.PositiveSmallIntegerField(default=0, verbose_name='Количество на складе')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата последнего изменения')),
                ('deleted', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Удален?')),
            ],
            options={
                'verbose_name': 'Подпродукт',
                'verbose_name_plural': 'Подпродукты',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Изображение')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата последнего изменения')),
                ('deleted', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Удален?')),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=50, verbose_name='Название')),
                ('rgb', colorful.fields.RGBColorField()),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Телефонный номер')),
                ('country', models.CharField(max_length=50, verbose_name='Страна')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('issue_date', models.DateTimeField(auto_now=True, verbose_name='Дата оформления')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата последнего изменения')),
                ('deleted', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Удален?')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Статус заказа')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказов',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('vendor_code', models.CharField(max_length=50, verbose_name='Артикл')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('old_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Старая цена')),
                ('discount', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Скидка в процентах')),
                ('description', models.TextField(max_length=1500, verbose_name='Описание')),
                ('size', models.CharField(help_text='Формат строго: n-n. Пример 42-50', max_length=50, verbose_name='Размерный ряд')),
                ('fabric_structure', models.CharField(max_length=50, verbose_name='Состав ткани')),
                ('number_in_ruler', models.PositiveSmallIntegerField(default=0, verbose_name='Количество в линейке')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('bestseller', models.BooleanField(default=False, verbose_name='Хит продаж')),
                ('novelty', models.BooleanField(default=True, verbose_name='Новинка')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата последнего изменения')),
                ('deleted', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Удален?')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', to='store.collection', verbose_name='Коллекция')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['deleted', 'id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('total_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Общая цена')),
                ('children_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_items', to='store.childrenproduct', verbose_name='Продукт')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Продукт заказа',
                'verbose_name_plural': 'Продукты заказов',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='store.orderstatus', verbose_name='Статус заказа'),
        ),
        migrations.AddField(
            model_name='childrenproduct',
            name='color',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='children_products', to='store.color', verbose_name='Цвет'),
        ),
        migrations.AddField(
            model_name='childrenproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children_products', to='store.product', verbose_name='Продукт'),
        ),
    ]
